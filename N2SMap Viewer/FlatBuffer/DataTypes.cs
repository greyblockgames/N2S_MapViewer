// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace N2S.FileFormat
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Vec2 : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Vec2 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int X { get { return __p.bb.GetInt(__p.bb_pos + 0); } }
  public int Y { get { return __p.bb.GetInt(__p.bb_pos + 4); } }

  public static Offset<N2S.FileFormat.Vec2> CreateVec2(FlatBufferBuilder builder, int X, int Y) {
    builder.Prep(4, 8);
    builder.PutInt(Y);
    builder.PutInt(X);
    return new Offset<N2S.FileFormat.Vec2>(builder.Offset);
  }
  public Vec2T UnPack() {
    var _o = new Vec2T();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(Vec2T _o) {
    _o.X = this.X;
    _o.Y = this.Y;
  }
  public static Offset<N2S.FileFormat.Vec2> Pack(FlatBufferBuilder builder, Vec2T _o) {
    if (_o == null) return default(Offset<N2S.FileFormat.Vec2>);
    return CreateVec2(
      builder,
      _o.X,
      _o.Y);
  }
};

public class Vec2T
{
  public int X { get; set; }
  public int Y { get; set; }

  public Vec2T() {
    this.X = 0;
    this.Y = 0;
  }
}


}
